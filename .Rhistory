?rMultinom
?rultinom
?rmultinom
rMultinom(2,4,rep(0.25))
rMultinom(2,4,rep(0.25,4))
rmultinom(2,4,rep(0.25,4))
sample(2,4,matrix(1:8,2,4))
?sample
cumsum(1:10)
?prod
update.C<-function(D_c=D_c,Ti=Ti,Y=Y,N=N,D_r_rep=D_r_rep,D_f_rep=D_f_rep,b_rep=b_rep,eta=eta,alpha=alpha,sigma=sigma){
if (is.vector(eta)==TRUE) eta<-matrix(eta,nrow=q3,ncol=1)# Convert eta to matrix if vector
L<-ncol(eta)  			# Number of classes
alpha_rep_l<-rep(0,N) #temp class l-specific coefficients
ld_l <- matrix(0,N,L) #likelihood evaluated at class l
pi<-exp(D_c %*% eta)/apply(exp(D_c %*% eta),1,sum) #class allocation prob
for (l in 1:L){
alpha_rep_l[1:T_i[1]] <- rep(alpha[l],T_i[1])
for (i in 2:n){
alpha_rep_l[sum(T_i[1:(i-1)])+1:T_i[i]] <- rep(alpha[l],T_i[i])
}
ld_l[,l] <- dnorm(Y) * sigma + D_r_rep * b_rep + D_f_rep %*% beta + t * alpha_rep_l
}
C_prob[1,] <- pi[1,] * apply(ld_l[1:Ti[1],],2,prod)
C[1] <-sample(1,1:L,C_prob[1,])
for (i in 2:n){
C_prob[i,] <- pi[i,] * apply(ld_l[1:(i-1)])+1:T_i[i],],2,prod)
C[i] <-sample(1,1:L,C_prob[i,])
}
if (is.vector(eta)==TRUE) eta<-matrix(eta,nrow=q3,ncol=1)# Convert eta to matrix if vector
L<-ncol(eta)  			# Number of classes
alpha_rep_l<-rep(0,N) #temp class l-specific coefficients
ld_l <- matrix(0,N,L) #likelihood evaluated at class l
pi<-exp(D_c %*% eta)/apply(exp(D_c %*% eta),1,sum) #class allocation prob
for (l in 1:L){
alpha_rep_l[1:T_i[1]] <- rep(alpha[l],T_i[1])
for (i in 2:n){
alpha_rep_l[sum(T_i[1:(i-1)])+1:T_i[i]] <- rep(alpha[l],T_i[i])
}
ld_l[,l] <- dnorm(Y) * sigma + D_r_rep * b_rep + D_f_rep %*% beta + t * alpha_rep_l
}
sigma <- 1
for (l in 1:L){
alpha_rep_l[1:T_i[1]] <- rep(alpha[l],T_i[1])
for (i in 2:n){
alpha_rep_l[sum(T_i[1:(i-1)])+1:T_i[i]] <- rep(alpha[l],T_i[i])
}
ld_l[,l] <- dnorm(Y) * sigma + D_r_rep * b_rep + D_f_rep %*% beta + t * alpha_rep_l
}
C_prob[1,] <- pi[1,] * apply(ld_l[1:T_i[1],],2,prod)
C_prob <- matrix(0,n,L) #posterior probabilities for classes
C_prob[1,] <- pi[1,] * apply(ld_l[1:T_i[1],],2,prod)
apply(ld_l[1:T_i[1],],2,prod)
pi[1,]
pi[1,] * apply(ld_l[1:T_i[1],],2,prod)
sample(1,1:L,C_prob[1,])
sample(1,1:L,replace=F,C_prob[1,])
L
?sample
sample(1:L,1,replace=F,prob=C_prob[1,])
for (i in 2:n){
C_prob[i,] <- pi[i,] * apply(ld_l[1:(i-1)])+1:T_i[i],],2,prod)
C[i] <-sample(1:L,1,replace=F,prob=C_prob[i,])
}
pi[i,] * apply(ld_l[1:(i-1)])+1:T_i[i],],2,prod)
apply(ld_l[1:(i-1)])+1:T_i[i],],2,prod)
for (i in 2:n){
C_prob[i,] <- pi[i,] * apply(ld_l[sum(T_i[1:(i-1)])+1:T_i[i],],2,prod)
C[i] <-sample(1:L,1,replace=F,prob=C_prob[i,])
}
C_prob
pi
ld_l
for (l in 1:L){
alpha_rep_l[1:T_i[1]] <- rep(alpha[l],T_i[1])
for (i in 2:n){
alpha_rep_l[sum(T_i[1:(i-1)])+1:T_i[i]] <- rep(alpha[l],T_i[i])
}
ld_l[,l] <- dnorm(Y,D_r_rep * b_rep + D_f_rep %*% beta + t * alpha_rep_l,sigma)
}
ld_l
C_prob[1,] <- pi[1,] * apply(ld_l[1:T_i[1],],2,prod)
C[1] <-sample(1:L,1,replace=F,prob=C_prob[1,])
for (i in 2:n){
C_prob[i,] <- pi[i,] * apply(ld_l[sum(T_i[1:(i-1)])+1:T_i[i],],2,prod)
C[i] <-sample(1:L,1,replace=F,prob=C_prob[i,])
}
table(C)
?crossprod
C_rep <- rep(0,N) #save latent class indicator for all observations
C_rep[1:T_i[1]]<-rep(C[1],T_i[1])
for (i in 2:n){
C_rep[sum(T_i[1:(i-1)])+1:T_i[i]] <- rep(C[l],T_i[i])
}
C_rep
C
T_i
C_rep[1:T_i[1]]<-rep(C[1],T_i[1])
C_rep[1:T_i[1]]
i=2
sum(T_i[1:(i-1)])+1:T_i[i]
for (i in 2:n){
C_rep[sum(T_i[1:(i-1)])+1:T_i[i]] <- rep(C[i],T_i[i])
}
C_rep
dim(t)
length(t)
s0_alpha=100
for (l in 1:L){
V_alpha[l] <- 1/(1/s0_alpha + sigma^(-2) * t[C_rep==l]^2)
mu_alpha[l] <-V_alpha[l] * sum(t[C_rep==l] * (Y[C_rep==l]-D_f_rep[C_rep==l,]%*%beta- D_r_rep[C_rep==l,] * b_rep[C_rep==l]))
}
V_alpha <-rep(0,L) #posterior variance for alpha
mu_alpha <-rep(0,L) #posterior mean for alpha
for (l in 1:L){
V_alpha[l] <- 1/(1/s0_alpha + sigma^(-2) * t[C_rep==l]^2)
mu_alpha[l] <-V_alpha[l] * sum(t[C_rep==l] * (Y[C_rep==l]-D_f_rep[C_rep==l,]%*%beta- D_r_rep[C_rep==l,] * b_rep[C_rep==l]))
}
for (l in 1:L){
V_alpha[l] <- 1/(1/s0_alpha + sigma^(-2) * sum(t[C_rep==l]^2))
mu_alpha[l] <-V_alpha[l] * sum(t[C_rep==l] * (Y[C_rep==l]-D_f_rep[C_rep==l,]%*%beta- D_r_rep[C_rep==l,] * b_rep[C_rep==l]))
}
V_alpha
mu_alpha
sigma
alpha
for (l in 1:L){
V_alpha[l] <- 1/(1/s0_alpha + sigma^(-2) * sum(t[C_rep==l]^2))
mu_alpha[l] <-V_alpha[l] * sum(t[C_rep==l] * (Y[C_rep==l]-D_f_rep[C_rep==l,]%*%beta- D_r_rep[C_rep==l,] * b_rep[C_rep==l]))
}
alpha <-rnorm(L) * sqrt(V_alpha) + mu_alpha
?function
)
alpha_rep[1:T_i[1]]<-rep(alpha[C[1]],T_i[1])
for (i in 2:n){
alpha_rep[sum(T_i[1:(i-1)])+1:T_i[i]]<-rep(alpha[C[i]],T_i[i])
}
s0_beta=100
V_beta <- solve(s0_beta * diag(q1) + sigma^(-2)*crossprod(D_f_rep,D_f_rep))
mu_beta <- V_beta %*% crossprod(D_f_rep,Y-D_r_rep * b_rep-t*alpha_rep)
mu_beta
V_beta
beta
rmvnorm(1,mu_beta,V_beta)
D_r
sigma_b=0.001
sigma_a=0.001
N/2+sigma_a
crossprod(Y-D_f_rep%*%beta-D_r_rep * b_rep-t*alpha_rep,Y-D_f_rep%*%beta-D_r_rep * b_rep-t*alpha_rep)
inv_sigma2 <-rgamma(1,N/2+sigma_a,crossprod(Y-D_f_rep%*%beta-D_r_rep * b_rep-t*alpha_rep,Y-D_f_rep%*%beta-D_r_rep * b_rep-t*alpha_rep)/2+sigma_b)
1/sqrt(inv_sigma2)
s0_b=100
V_b <-rep(0,n) #variance
mu_b <-rep(0,n) #mean
for (i in 1:n){
if (i==1){
j_indx <-1:T_i[1]
}else{
j_index <- sum(T_i[1:(i-1)])+1:T_i[i]
}
}
V_b[i] <- (s0_b^(-1) + sigma^2 * crossprod(D_r_rep[j_index,],D_r_rep[j_index,]))^(-1)
mu_b[i] <- V_b[i] * crossprod(D_r_rep[j_index,],Y[j_index]-D_f_rep[j_index,]%*%beta-t[j_index] * alpha_rep[j_index])
}
for (i in 1:n){
if (i==1){
j_indx <-1:T_i[1]
}else{
j_index <- sum(T_i[1:(i-1)])+1:T_i[i]
}
V_b[i] <- (s0_b^(-1) + sigma^2 * crossprod(D_r_rep[j_index,],D_r_rep[j_index,]))^(-1)
mu_b[i] <- V_b[i] * crossprod(D_r_rep[j_index,],Y[j_index]-D_f_rep[j_index,]%*%beta-t[j_index] * alpha_rep[j_index])
}
plot(b,rnorm(n)*sqrt(V_b) + mu_b)
remove(list=objects())
require(foreign)
require(rstan)
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
require(survey)
require(foreach)
require(doMC)
require(ggplot2)
require(xtable)
set.seed(20150213)
load("output/check_3var_20170412_Yall_Imain.RData")
setwd("/Users/Shared/ysi/boxsync/Box Sync/projects/weighting/code")
load("output/check_3var_20170412_Yall_Imain.RData")
over_pred_mean<-data.frame(cbind(c(mean(bias_mu_pred),
sqrt(mean(bias_mu_pred^2)),
mean(sd_mu_pred),
mean(cr_mu_pred)),
c(mean(bias_mu_pred_iid),
sqrt(mean(bias_mu_pred_iid^2)),
mean(sd_mu_pred_iid),
mean(cr_mu_pred_iid))))
over_wgt_mean<-data.frame(cbind(c(mean(bias_mu_st),sqrt(mean(bias_mu_st^2)),
mean(sd_mu_st),
mean(cr_mu_st)),
c(mean(bias_mu_id),sqrt(mean(bias_mu_id^2)),
mean(sd_mu_id),
mean(cr_mu_id)),
c(mean(bias_mu_ps),
sqrt(mean(bias_mu_ps^2)),
mean(sd_mu_ps),
mean(cr_mu_ps)),
c(mean(bias_mu_rake),
sqrt(mean(bias_mu_rake^2)),
mean(sd_mu_rake),
mean(cr_mu_rake)),
c(mean(bias_mu_ips),
sqrt(mean(bias_mu_ips^2)),
mean(sd_mu_ips),
mean(cr_mu_ips))
))
mar_pred_mean<-data.frame(cbind(c(apply(bias_sub_st,2,mean),
sqrt(apply(bias_sub_st^2,2,mean)),
apply(sd_sub_st,2,mean),
apply(cr_sub_st,2,mean)),
c(apply(bias_sub_iid,2,mean),
sqrt(apply(bias_sub_iid^2,2,mean)),
apply(sd_sub_iid,2,mean),
apply(cr_sub_iid,2,mean))
))
mar_wgt_mean<-data.frame(cbind(c(apply(bias_sub_st_wt,2,mean),
sqrt(apply(bias_sub_st_wt^2,2,mean)),
apply(sd_sub_st_wt,2,mean),
apply(cr_sub_st_wt,2,mean)),
c(apply(bias_sub_iid_wt,2,mean),
sqrt(apply(bias_sub_iid_wt^2,2,mean)),
apply(sd_sub_iid_wt,2,mean),
apply(cr_sub_iid_wt,2,mean)),
c(apply(bias_sub_ps_wt,2,mean),
sqrt(apply(bias_sub_ps_wt^2,2,mean)),
apply(sd_sub_ps_wt,2,mean),
apply(cr_sub_ps_wt,2,mean)),
c(apply(bias_sub_rake_wt,2,mean),
sqrt(apply(bias_sub_rake_wt^2,2,mean)),
apply(sd_sub_rake_wt,2,mean),
apply(cr_sub_rake_wt,2,mean)),
c(apply(bias_sub_ips_wt,2,mean),
sqrt(apply(bias_sub_ips_wt^2,2,mean)),
apply(sd_sub_ips_wt,2,mean),
apply(cr_sub_ips_wt,2,mean))
))
int_pred_mean<-data.frame(cbind(c(mean(bias_sub_st_int),
sqrt(mean(bias_sub_st_int^2)),
mean(sd_sub_st_int),
mean(cr_sub_st_int)),
c(mean(bias_sub_iid_int),
sqrt(mean(bias_sub_iid_int^2)),
mean(sd_sub_iid_int),
mean(cr_sub_iid_int))))
int_wgt_mean<-data.frame(cbind(c(mean(bias_sub_st_wt_int),sqrt(mean(bias_sub_st_wt_int^2)),
mean(sd_sub_st_wt_int),
mean(cr_sub_st_wt_int)),
c(mean(bias_sub_iid_wt_int),sqrt(mean(bias_sub_iid_wt_int^2)),
mean(sd_sub_iid_wt_int),
mean(cr_sub_iid_wt_int)),
c(mean(bias_sub_ps_wt_int),
sqrt(mean(bias_sub_ps_wt_int^2)),
mean(sd_sub_ps_wt_int),
mean(cr_sub_ps_wt_int)),
c(mean(bias_sub_rake_wt_int),
sqrt(mean(bias_sub_rake_wt_int^2)),
mean(sd_sub_rake_wt_int),
mean(cr_sub_rake_wt_int)),
c(mean(bias_sub_ips_wt_int),
sqrt(mean(bias_sub_ips_wt_int^2)),
mean(sd_sub_ips_wt_int),
mean(cr_sub_ips_wt_int))
))
bias_out<-data.frame(cbind(c("overall", "non-white young","age:18-34","age:35-44","age:45-54","age:55-64","age:65+",
"whi&non-Hisp","blac&non-Hisp","Asian","Hisp","other race/eth","<high sch","high sch",
"some col",">=col"),rbind(c(abs(over_pred_mean[1,]),abs(over_wgt_mean[1,])),c(abs(int_pred_mean[1,]),abs(int_wgt_mean[1,])),
cbind(abs(mar_pred_mean[1:sum(l_v),]),abs(mar_wgt_mean[1:sum(l_v),])))))
colnames(bias_out)<-c("Quantity","Str-P", "Ind-P","Str-W", "Ind-W","PS-W", "Rake-W","IP-W")
bias_out$Quantity<-factor(bias_out$Quantity,levels=c("age:18-34","age:35-44","age:45-54","age:55-64","age:65+",
"whi&non-Hisp","blac&non-Hisp","Asian","Hisp","other race/eth","<high sch","high sch",
"some col",">=col", "non-white young","overall"))
bias_out.m<-melt(bias_out)
require(reshape)
install.packages("reshape")
install.packages("Reshape")
require(Reshape)
require(reshape)
install.packages("reshape")
install.packages("reshape")
require(reshape2)
bias_out.m<-melt(bias_out)
(p <- ggplot(bias_out.m, aes(variable, Quantity)) + geom_tile(aes(fill = value),colour = "white") +
scale_fill_gradient(name="abs.Bias",low = "white",high = "steelblue"))+labs(x = "",y = "") +
scale_x_discrete(expand = c(0, 0)) +scale_y_discrete(expand = c(0, 0)) +
theme_bw() +
theme(axis.line = element_line(colour = "black"),
axis.text=element_text(size=12),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())
(p <- ggplot(bias_out.m, aes(variable, Quantity)) + geom_tile(aes(fill = value),colour = "white") +
scale_fill_gradient(name="abs.Bias",low = "white",high = "steelblue"))+labs(x = "",y = "") +
scale_x_discrete(expand = c(0, 0)) +scale_y_discrete(expand = c(0, 0)) +
theme_bw() +
theme(axis.line = element_line(colour = "black"),
axis.text=element_text(size=16),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())
pdf("/Users/Shared/ysi/boxsync/Box Sync/projects/weighting/latex/plot/var3_bias_case1_05312017.pdf")
(p <- ggplot(bias_out.m, aes(variable, Quantity)) + geom_tile(aes(fill = value),colour = "white") +
scale_fill_gradient(name="abs.Bias",low = "white",high = "steelblue"))+labs(x = "",y = "") +
scale_x_discrete(expand = c(0, 0)) +scale_y_discrete(expand = c(0, 0)) +
theme_bw() +
theme(axis.line = element_line(colour = "black"),
axis.text=element_text(size=16),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())
dev.off()
(p <- ggplot(bias_out.m, aes(variable, Quantity)) + geom_tile(aes(fill = value),colour = "white") +
scale_fill_gradient(name="abs.Bias",low = "white",high = "steelblue"))+labs(x = "",y = "") +
scale_x_discrete(expand = c(0, 0)) +scale_y_discrete(expand = c(0, 0)) +
theme_bw() +
theme(axis.line = element_line(colour = "black"),
axis.text=element_text(size=15),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())
dev.off()
pdf("/Users/Shared/ysi/boxsync/Box Sync/projects/weighting/latex/plot/var3_bias_case1_05312017.pdf")
(p <- ggplot(bias_out.m, aes(variable, Quantity)) + geom_tile(aes(fill = value),colour = "white") +
scale_fill_gradient(name="abs.Bias",low = "white",high = "steelblue"))+labs(x = "",y = "") +
scale_x_discrete(expand = c(0, 0)) +scale_y_discrete(expand = c(0, 0)) +
theme_bw() +
theme(axis.line = element_line(colour = "black"),
axis.text=element_text(size=12),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())
dev.off()
(p <- ggplot(bias_out.m, aes(variable, Quantity)) + geom_tile(aes(fill = value),colour = "white") +
scale_fill_gradient(name="abs.Bias",low = "white",high = "steelblue"))+labs(x = "",y = "") +
scale_x_discrete(expand = c(0, 0)) +scale_y_discrete(expand = c(0, 0)) +
theme_bw() +
theme(axis.line = element_line(colour = "black"),
axis.text=element_text(size=14),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())
dev.off()
pdf("/Users/Shared/ysi/boxsync/Box Sync/projects/weighting/latex/plot/var3_bias_case1_05312017.pdf")
(p <- ggplot(bias_out.m, aes(variable, Quantity)) + geom_tile(aes(fill = value),colour = "white") +
scale_fill_gradient(name="abs.Bias",low = "white",high = "steelblue"))+labs(x = "",y = "") +
scale_x_discrete(expand = c(0, 0)) +scale_y_discrete(expand = c(0, 0)) +
theme_bw() +
theme(axis.line = element_line(colour = "black"),
axis.text=element_text(size=15),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())
dev.off()
pdf("/Users/Shared/ysi/boxsync/Box Sync/projects/weighting/latex/plot/var3_bias_case1_05312017.pdf")
(p <- ggplot(bias_out.m, aes(variable, Quantity)) + geom_tile(aes(fill = value),colour = "white") +
scale_fill_gradient(name="abs.Bias",low = "white",high = "steelblue"))+labs(x = "",y = "") +
scale_x_discrete(expand = c(0, 0)) +scale_y_discrete(expand = c(0, 0)) +
theme_bw() +
theme(axis.line = element_line(colour = "black"),
axis.text=element_text(size=14.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())
dev.off()
pdf("/Users/Shared/ysi/boxsync/Box Sync/projects/weighting/latex/plot/var3_bias_case1_05312017.pdf")
(p <- ggplot(bias_out.m, aes(variable, Quantity)) + geom_tile(aes(fill = value),colour = "white") +
scale_fill_gradient(name="abs.Bias",low = "white",high = "steelblue"))+labs(x = "",y = "") +
scale_x_discrete(expand = c(0, 0)) +scale_y_discrete(expand = c(0, 0)) +
theme_bw() +
theme(axis.line = element_line(colour = "black"),
axis.text=element_text(size=14),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())
dev.off()
pdf("/Users/Shared/ysi/boxsync/Box Sync/projects/weighting/latex/plot/var3_bias_case1_05312017.pdf")
(p <- ggplot(bias_out.m, aes(variable, Quantity)) + geom_tile(aes(fill = value),colour = "white") +
scale_fill_gradient(name="abs.Bias",low = "white",high = "steelblue"))+labs(x = "",y = "") +
scale_x_discrete() +scale_y_discrete(expand = c(0, 0)) +
theme_bw() +
theme(axis.line = element_line(colour = "black"),
axis.text=element_text(size=14),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())
dev.off()
pdf("/Users/Shared/ysi/boxsync/Box Sync/projects/weighting/latex/plot/var3_bias_case1_05312017.pdf")
(p <- ggplot(bias_out.m, aes(variable, Quantity)) + geom_tile(aes(fill = value),colour = "white") +
scale_fill_gradient(name="abs.Bias",low = "white",high = "steelblue"))+labs(x = "",y = "") +
scale_x_discrete() +scale_y_discrete() +
theme_bw() +
theme(axis.line = element_line(colour = "black"),
axis.text=element_text(size=14),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())
dev.off()
pdf("/Users/Shared/ysi/boxsync/Box Sync/projects/weighting/latex/plot/var3_bias_case1_05312017.pdf")
(p <- ggplot(bias_out.m, aes(variable, Quantity)) + geom_tile(aes(fill = value),colour = "white") +
scale_fill_gradient(name="abs.Bias",low = "white",high = "steelblue"))+labs(x = "",y = "") +
scale_x_discrete() +scale_y_discrete() +
theme_bw() +
theme(axis.line = element_line(colour = "black"),
axis.text=element_text(size=13),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())
dev.off()
pdf("/Users/Shared/ysi/boxsync/Box Sync/projects/weighting/latex/plot/var3_bias_case1_05312017.pdf")
(p <- ggplot(bias_out.m, aes(variable, Quantity)) + geom_tile(aes(fill = value),colour = "white") +
scale_fill_gradient(name="abs.Bias",low = "white",high = "steelblue"))+labs(x = "",y = "") +
scale_x_discrete() +scale_y_discrete() +
theme_bw() +
theme(axis.line = element_line(colour = "black"),
axis.text=element_text(size=12),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())
dev.off()
rmse_out<-data.frame(cbind(c("overall", "non-white young","age:18-34","age:35-44","age:45-54","age:55-64","age:65+",
"whi&non-Hisp","blac&non-Hisp","Asian","Hisp","other race/eth","<high sch","high sch",
"some col",">=col"),
rbind(c(over_pred_mean[2,],over_wgt_mean[2,]),c(int_pred_mean[2,],int_wgt_mean[2,]),
cbind(mar_pred_mean[sum(l_v)+1:sum(l_v),],mar_wgt_mean[sum(l_v)+1:sum(l_v),]))))
colnames(rmse_out)<-c("Quantity","Str-P", "Ind-P","Str-W", "Ind-W","PS-W", "Rake-W","IP-W")
rmse_out$Quantity<-factor(rmse_out$Quantity,levels=c("age:18-34","age:35-44","age:45-54","age:55-64","age:65+",
"whi&non-Hisp","blac&non-Hisp","Asian","Hisp","other race/eth","<high sch","high sch",
"some col",">=col", "non-white young","overall"))
rmse_out.m<-melt(rmse_out)
pdf("/Users/Shared/ysi/boxsync/Box Sync/projects/weighting/latex/plot/var3_rmse_case1_05312017.pdf")
(p <- ggplot(rmse_out.m, aes(variable, Quantity)) + geom_tile(aes(fill = value),colour = "white") +
scale_fill_gradient(name="RMSE",low = "white",high = "steelblue"))+labs(x = "",y = "") +
scale_x_discrete() +scale_y_discrete() +
theme_bw() +
theme(axis.line = element_line(colour = "black"),
axis.text=element_text(size=12),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())
dev.off()
se_out<-data.frame(cbind(c("overall", "non-white young","age:18-34","age:35-44","age:45-54","age:55-64","age:65+",
"whi&non-Hisp","blac&non-Hisp","Asian","Hisp","other race/eth","<high sch","high sch",
"some col",">=col"),
rbind(c(over_pred_mean[3,],over_wgt_mean[3,]),c(int_pred_mean[3,],int_wgt_mean[3,]),
cbind(mar_pred_mean[2*sum(l_v)+1:sum(l_v),],mar_wgt_mean[2*sum(l_v)+1:sum(l_v),]))))
colnames(se_out)<-c("Quantity","Str-P", "Ind-P","Str-W", "Ind-W","PS-W", "Rake-W","IP-W")
se_out$Quantity<-factor(se_out$Quantity,levels=c("age:18-34","age:35-44","age:45-54","age:55-64","age:65+",
"whi&non-Hisp","blac&non-Hisp","Asian","Hisp","other race/eth","<high sch","high sch",
"some col",">=col", "non-white young","overall"))
se_out.m<-melt(se_out)
pdf("/Users/Shared/ysi/boxsync/Box Sync/projects/weighting/latex/plot/var3_se_case1_05312017.pdf")
(p <- ggplot(se_out.m, aes(variable, Quantity)) + geom_tile(aes(fill = value),colour = "white") +
scale_fill_gradient(name="Ave.SD",low = "white",high = "steelblue"))+labs(x = "",y = "") +
scale_x_discrete() +scale_y_discrete() +
theme_bw() +
theme(axis.line = element_line(colour = "black"),
axis.text=element_text(size=12),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())
dev.off()
cr_out<-data.frame(cbind(c("overall", "non-white young","age:18-34","age:35-44","age:45-54","age:55-64","age:65+",
"whi&non-Hisp","blac&non-Hisp","Asian","Hisp","other race/eth","<high sch","high sch",
"some col",">=col"),
rbind(c(over_pred_mean[4,],over_wgt_mean[4,]),c(int_pred_mean[4,],int_wgt_mean[4,]),
cbind(mar_pred_mean[3*sum(l_v)+1:sum(l_v),],mar_wgt_mean[3*sum(l_v)+1:sum(l_v),]))))
colnames(cr_out)<-c("Quantity","Str-P", "Ind-P","Str-W", "Ind-W","PS-W", "Rake-W","IP-W")
cr_out$Quantity<-factor(cr_out$Quantity,levels=c("age:18-34","age:35-44","age:45-54","age:55-64","age:65+",
"whi&non-Hisp","blac&non-Hisp","Asian","Hisp","other race/eth","<high sch","high sch",
"some col",">=col", "non-white young","overall"))
cr_out.m<-melt(cr_out)
pdf("/Users/Shared/ysi/boxsync/Box Sync/projects/weighting/latex/plot/var3_cr_case1_05312017.pdf")
(p <- ggplot(cr_out.m, aes(variable, Quantity)) + geom_tile(aes(fill = value),colour = "white") +
scale_fill_gradient(name="Coverage",low = "steelblue",high = "white"))+labs(x = "",y = "") +
scale_x_discrete() +scale_y_discrete() +
theme_bw() +
theme(axis.line = element_line(colour = "black"),
axis.text=element_text(size=12),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())
dev.off()
remove(list=objects())
install.packages("rstan")
install.packages("rstan")
install.packages("ggplot2")
install.packages("reshape")
install.packages("reshape")
